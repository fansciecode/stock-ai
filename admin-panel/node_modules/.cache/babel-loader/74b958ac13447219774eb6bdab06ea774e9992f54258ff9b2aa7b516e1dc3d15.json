{"ast":null,"code":"import axios from'axios';const API_URL=process.env.REACT_APP_API_URL||'https://api.ibcm.app/api';const axiosInstance=axios.create({baseURL:API_URL,timeout:10000,// Increased timeout to 10 seconds\nheaders:{'Content-Type':'application/json'}});// Add a request interceptor\naxiosInstance.interceptors.request.use(config=>{console.log('Making request to:',config.url);const token=localStorage.getItem('adminToken');if(token){config.headers.Authorization=`Bearer ${token}`;}return config;},error=>{console.error('Request error:',error);return Promise.reject(error);});// Add a response interceptor\naxiosInstance.interceptors.response.use(response=>{console.log('Response received:',response.config.url);return response;},error=>{var _error$config,_error$response;console.error('Response error:',(_error$config=error.config)===null||_error$config===void 0?void 0:_error$config.url,error.message);if(error.code==='ECONNABORTED'){return Promise.reject(new Error('Request timeout. Please check your connection.'));}if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){localStorage.removeItem('adminToken');window.location.href='/login';}if(!error.response){return Promise.reject(new Error('Network error. Please check your connection.'));}return Promise.reject(error);});// API endpoints with error handling\nexport const authAPI={login:async credentials=>{try{const response=await axiosInstance.post('/auth/login',credentials);return response;}catch(error){console.error('Login error:',error);throw error;}},logout:()=>axiosInstance.post('/auth/logout'),verifyToken:()=>axiosInstance.get('/auth/verify')};export const usersAPI={getAll:function(){let page=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;let limit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:10;return axiosInstance.get(`/admin/users?page=${page}&limit=${limit}`);},getById:id=>axiosInstance.get(`/admin/users/${id}`),update:(id,data)=>axiosInstance.put(`/users/${id}`,data),// Regular user update endpoint\ndelete:id=>axiosInstance.delete(`/users/${id}`)// Regular user delete endpoint\n};export const businessAPI={getAll:function(){let page=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;let limit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:10;return axiosInstance.get(`/admin/verifications?page=${page}&limit=${limit}`);},getById:id=>axiosInstance.get(`/business/${id}`),// Regular business endpoint\nupdate:(id,data)=>axiosInstance.put(`/business/${id}`,data),// Regular business update endpoint\nverify:id=>axiosInstance.put(`/admin/verifications/${id}`,{status:'approved'}),reject:(id,reason)=>axiosInstance.put(`/admin/verifications/${id}`,{status:'rejected',notes:reason})};export const deliveryAPI={getAll:function(){let page=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;let limit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:10;return axiosInstance.get(`/deliveries?page=${page}&limit=${limit}`);},getById:id=>axiosInstance.get(`/deliveries/${id}`),updateStatus:(id,status)=>axiosInstance.put(`/deliveries/${id}/status`,{status})};export const statsAPI={getDashboardStats:async()=>{try{const response=await axiosInstance.get('/admin/dashboard');return response;}catch(error){console.error('Dashboard stats error:',error);throw error;}},getSystemHealth:async()=>{try{const response=await axiosInstance.get('/admin/system-health');return response;}catch(error){console.error('System health error:',error);throw error;}}};export default axiosInstance;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","axiosInstance","create","baseURL","timeout","headers","interceptors","request","use","config","console","log","url","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$config","_error$response","message","code","Error","status","removeItem","window","location","href","authAPI","login","credentials","post","logout","verifyToken","get","usersAPI","getAll","page","arguments","length","undefined","limit","getById","id","update","data","put","delete","businessAPI","verify","reason","notes","deliveryAPI","updateStatus","statsAPI","getDashboardStats","getSystemHealth"],"sources":["/Users/kirannaik/Desktop/zed/Android-fullstack-ibcm/admin-panel/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'https://api.ibcm.app/api';\n\nconst axiosInstance = axios.create({\n  baseURL: API_URL,\n  timeout: 10000, // Increased timeout to 10 seconds\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add a request interceptor\naxiosInstance.interceptors.request.use(\n  (config) => {\n    console.log('Making request to:', config.url);\n    const token = localStorage.getItem('adminToken');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    console.error('Request error:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Add a response interceptor\naxiosInstance.interceptors.response.use(\n  (response) => {\n    console.log('Response received:', response.config.url);\n    return response;\n  },\n  (error) => {\n    console.error('Response error:', error.config?.url, error.message);\n    if (error.code === 'ECONNABORTED') {\n      return Promise.reject(new Error('Request timeout. Please check your connection.'));\n    }\n    if (error.response?.status === 401) {\n      localStorage.removeItem('adminToken');\n      window.location.href = '/login';\n    }\n    if (!error.response) {\n      return Promise.reject(new Error('Network error. Please check your connection.'));\n    }\n    return Promise.reject(error);\n  }\n);\n\n// API endpoints with error handling\nexport const authAPI = {\n  login: async (credentials) => {\n    try {\n      const response = await axiosInstance.post('/auth/login', credentials);\n      return response;\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    }\n  },\n  logout: () => axiosInstance.post('/auth/logout'),\n  verifyToken: () => axiosInstance.get('/auth/verify'),\n};\n\nexport const usersAPI = {\n  getAll: (page = 1, limit = 10) => axiosInstance.get(`/admin/users?page=${page}&limit=${limit}`),\n  getById: (id) => axiosInstance.get(`/admin/users/${id}`),\n  update: (id, data) => axiosInstance.put(`/users/${id}`, data), // Regular user update endpoint\n  delete: (id) => axiosInstance.delete(`/users/${id}`), // Regular user delete endpoint\n};\n\nexport const businessAPI = {\n  getAll: (page = 1, limit = 10) => axiosInstance.get(`/admin/verifications?page=${page}&limit=${limit}`),\n  getById: (id) => axiosInstance.get(`/business/${id}`), // Regular business endpoint\n  update: (id, data) => axiosInstance.put(`/business/${id}`, data), // Regular business update endpoint\n  verify: (id) => axiosInstance.put(`/admin/verifications/${id}`, { status: 'approved' }),\n  reject: (id, reason) => axiosInstance.put(`/admin/verifications/${id}`, { status: 'rejected', notes: reason }),\n};\n\nexport const deliveryAPI = {\n  getAll: (page = 1, limit = 10) => axiosInstance.get(`/deliveries?page=${page}&limit=${limit}`),\n  getById: (id) => axiosInstance.get(`/deliveries/${id}`),\n  updateStatus: (id, status) => axiosInstance.put(`/deliveries/${id}/status`, { status }),\n};\n\nexport const statsAPI = {\n  getDashboardStats: async () => {\n    try {\n      const response = await axiosInstance.get('/admin/dashboard');\n      return response;\n    } catch (error) {\n      console.error('Dashboard stats error:', error);\n      throw error;\n    }\n  },\n  getSystemHealth: async () => {\n    try {\n      const response = await axiosInstance.get('/admin/system-health');\n      return response;\n    } catch (error) {\n      console.error('System health error:', error);\n      throw error;\n    }\n  }\n};\n\nexport default axiosInstance; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}