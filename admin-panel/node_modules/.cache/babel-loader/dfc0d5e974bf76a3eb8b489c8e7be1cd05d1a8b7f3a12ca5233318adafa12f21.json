{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\nconst axiosInstance = axios.create({\n  baseURL: API_URL,\n  timeout: 10000,\n  // Increased timeout to 10 seconds\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add a request interceptor\naxiosInstance.interceptors.request.use(config => {\n  console.log('Making request to:', config.url);\n  const token = localStorage.getItem('adminToken');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  console.error('Request error:', error);\n  return Promise.reject(error);\n});\n\n// Add a response interceptor\naxiosInstance.interceptors.response.use(response => {\n  console.log('Response received:', response.config.url);\n  return response;\n}, error => {\n  var _error$config, _error$response;\n  console.error('Response error:', (_error$config = error.config) === null || _error$config === void 0 ? void 0 : _error$config.url, error.message);\n  if (error.code === 'ECONNABORTED') {\n    return Promise.reject(new Error('Request timeout. Please check your connection.'));\n  }\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('adminToken');\n    window.location.href = '/login';\n  }\n  if (!error.response) {\n    return Promise.reject(new Error('Network error. Please check your connection.'));\n  }\n  return Promise.reject(error);\n});\n\n// API endpoints with error handling\nexport const authAPI = {\n  login: async credentials => {\n    try {\n      const response = await axiosInstance.post('/auth/login', credentials);\n      return response;\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    }\n  },\n  logout: () => axiosInstance.post('/auth/logout'),\n  verifyToken: () => axiosInstance.get('/auth/verify')\n};\nexport const usersAPI = {\n  getAll: (page = 1, limit = 10) => axiosInstance.get(`/admin/users?page=${page}&limit=${limit}`),\n  getById: id => axiosInstance.get(`/admin/users/${id}`),\n  update: (id, data) => axiosInstance.put(`/users/${id}`, data),\n  // Regular user update endpoint\n  delete: id => axiosInstance.delete(`/users/${id}`) // Regular user delete endpoint\n};\nexport const businessAPI = {\n  getAll: (page = 1, limit = 10) => axiosInstance.get(`/admin/verifications?page=${page}&limit=${limit}`),\n  getById: id => axiosInstance.get(`/business/${id}`),\n  // Regular business endpoint\n  update: (id, data) => axiosInstance.put(`/business/${id}`, data),\n  // Regular business update endpoint\n  verify: id => axiosInstance.put(`/admin/verifications/${id}`, {\n    status: 'approved'\n  }),\n  reject: (id, reason) => axiosInstance.put(`/admin/verifications/${id}`, {\n    status: 'rejected',\n    notes: reason\n  })\n};\nexport const deliveryAPI = {\n  getAll: (page = 1, limit = 10) => axiosInstance.get(`/deliveries?page=${page}&limit=${limit}`),\n  getById: id => axiosInstance.get(`/deliveries/${id}`),\n  updateStatus: (id, status) => axiosInstance.put(`/deliveries/${id}/status`, {\n    status\n  })\n};\nexport const statsAPI = {\n  getDashboardStats: async () => {\n    try {\n      const response = await axiosInstance.get('/admin/dashboard');\n      return response;\n    } catch (error) {\n      console.error('Dashboard stats error:', error);\n      throw error;\n    }\n  },\n  getSystemHealth: async () => {\n    try {\n      const response = await axiosInstance.get('/admin/system-health');\n      return response;\n    } catch (error) {\n      console.error('System health error:', error);\n      throw error;\n    }\n  }\n};\nexport default axiosInstance;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","axiosInstance","create","baseURL","timeout","headers","interceptors","request","use","config","console","log","url","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$config","_error$response","message","code","Error","status","removeItem","window","location","href","authAPI","login","credentials","post","logout","verifyToken","get","usersAPI","getAll","page","limit","getById","id","update","data","put","delete","businessAPI","verify","reason","notes","deliveryAPI","updateStatus","statsAPI","getDashboardStats","getSystemHealth"],"sources":["/Users/kirannaik/Desktop/zed/Android-fullstack-ibcm/admin-panel/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\n\nconst axiosInstance = axios.create({\n  baseURL: API_URL,\n  timeout: 10000, // Increased timeout to 10 seconds\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add a request interceptor\naxiosInstance.interceptors.request.use(\n  (config) => {\n    console.log('Making request to:', config.url);\n    const token = localStorage.getItem('adminToken');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    console.error('Request error:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Add a response interceptor\naxiosInstance.interceptors.response.use(\n  (response) => {\n    console.log('Response received:', response.config.url);\n    return response;\n  },\n  (error) => {\n    console.error('Response error:', error.config?.url, error.message);\n    if (error.code === 'ECONNABORTED') {\n      return Promise.reject(new Error('Request timeout. Please check your connection.'));\n    }\n    if (error.response?.status === 401) {\n      localStorage.removeItem('adminToken');\n      window.location.href = '/login';\n    }\n    if (!error.response) {\n      return Promise.reject(new Error('Network error. Please check your connection.'));\n    }\n    return Promise.reject(error);\n  }\n);\n\n// API endpoints with error handling\nexport const authAPI = {\n  login: async (credentials) => {\n    try {\n      const response = await axiosInstance.post('/auth/login', credentials);\n      return response;\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    }\n  },\n  logout: () => axiosInstance.post('/auth/logout'),\n  verifyToken: () => axiosInstance.get('/auth/verify'),\n};\n\nexport const usersAPI = {\n  getAll: (page = 1, limit = 10) => axiosInstance.get(`/admin/users?page=${page}&limit=${limit}`),\n  getById: (id) => axiosInstance.get(`/admin/users/${id}`),\n  update: (id, data) => axiosInstance.put(`/users/${id}`, data), // Regular user update endpoint\n  delete: (id) => axiosInstance.delete(`/users/${id}`), // Regular user delete endpoint\n};\n\nexport const businessAPI = {\n  getAll: (page = 1, limit = 10) => axiosInstance.get(`/admin/verifications?page=${page}&limit=${limit}`),\n  getById: (id) => axiosInstance.get(`/business/${id}`), // Regular business endpoint\n  update: (id, data) => axiosInstance.put(`/business/${id}`, data), // Regular business update endpoint\n  verify: (id) => axiosInstance.put(`/admin/verifications/${id}`, { status: 'approved' }),\n  reject: (id, reason) => axiosInstance.put(`/admin/verifications/${id}`, { status: 'rejected', notes: reason }),\n};\n\nexport const deliveryAPI = {\n  getAll: (page = 1, limit = 10) => axiosInstance.get(`/deliveries?page=${page}&limit=${limit}`),\n  getById: (id) => axiosInstance.get(`/deliveries/${id}`),\n  updateStatus: (id, status) => axiosInstance.put(`/deliveries/${id}/status`, { status }),\n};\n\nexport const statsAPI = {\n  getDashboardStats: async () => {\n    try {\n      const response = await axiosInstance.get('/admin/dashboard');\n      return response;\n    } catch (error) {\n      console.error('Dashboard stats error:', error);\n      throw error;\n    }\n  },\n  getSystemHealth: async () => {\n    try {\n      const response = await axiosInstance.get('/admin/system-health');\n      return response;\n    } catch (error) {\n      console.error('System health error:', error);\n      throw error;\n    }\n  }\n};\n\nexport default axiosInstance; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}