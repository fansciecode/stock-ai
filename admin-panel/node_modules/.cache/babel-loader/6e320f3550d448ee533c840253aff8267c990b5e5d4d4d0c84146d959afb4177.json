{"ast":null,"code":"var _jsxFileName = \"/Users/kirannaik/Desktop/zed/Android-fullstack-ibcm/admin-panel/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport authService from '../services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const initAuth = () => {\n      try {\n        if (authService.isAuthenticated()) {\n          const userData = authService.getUser();\n          setUser(userData);\n        }\n      } catch (error) {\n        console.error('Auth initialization error:', error);\n        setError(error.message || 'Authentication error');\n      } finally {\n        setLoading(false);\n      }\n    };\n    initAuth();\n  }, []);\n  const login = async (email, password) => {\n    try {\n      setLoading(true);\n      setError(null);\n      const userData = await authService.login(email, password);\n      if (userData) {\n        setUser(userData);\n      }\n      return userData;\n    } catch (error) {\n      console.error('Login error:', error);\n      setError(error.message || 'Login failed');\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = () => {\n    try {\n      authService.logout();\n      setUser(null);\n    } catch (error) {\n      console.error('Logout error:', error);\n      setError(error.message || 'Logout failed');\n    }\n  };\n  const register = async userData => {\n    try {\n      setLoading(true);\n      setError(null);\n      const result = await authService.register(userData);\n      return result;\n    } catch (error) {\n      console.error('Registration error:', error);\n      setError(error.message || 'Registration failed');\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const forgotPassword = async email => {\n    try {\n      setLoading(true);\n      setError(null);\n      await authService.forgotPassword(email);\n    } catch (error) {\n      console.error('Forgot password error:', error);\n      setError(error.message || 'Password reset request failed');\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const resetPassword = async (token, newPassword) => {\n    try {\n      setLoading(true);\n      setError(null);\n      await authService.resetPassword(token, newPassword);\n    } catch (error) {\n      console.error('Reset password error:', error);\n      setError(error.message || 'Password reset failed');\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const verifyResetToken = async token => {\n    try {\n      setLoading(true);\n      setError(null);\n      const result = await authService.verifyResetToken(token);\n      return result;\n    } catch (error) {\n      console.error('Verify reset token error:', error);\n      setError(error.message || 'Token verification failed');\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const updateProfile = async profileData => {\n    try {\n      setLoading(true);\n      setError(null);\n      const updatedUser = await authService.updateProfile(profileData);\n      if (updatedUser) {\n        setUser(updatedUser);\n      }\n      return updatedUser;\n    } catch (error) {\n      console.error('Update profile error:', error);\n      setError(error.message || 'Profile update failed');\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const verifyEmail = async token => {\n    try {\n      setLoading(true);\n      setError(null);\n      const result = await authService.verifyEmail(token);\n      return result;\n    } catch (error) {\n      console.error('Verify email error:', error);\n      setError(error.message || 'Email verification failed');\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const changePassword = async (oldPassword, newPassword) => {\n    try {\n      setLoading(true);\n      setError(null);\n      await authService.changePassword(oldPassword, newPassword);\n      return true;\n    } catch (error) {\n      console.error('Change password error:', error);\n      setError(error.message || 'Password change failed');\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const hasPermission = permission => {\n    try {\n      return authService.hasPermission(permission);\n    } catch (error) {\n      console.error('Permission check error:', error);\n      return false;\n    }\n  };\n  const hasRole = role => {\n    try {\n      return authService.hasRole(role);\n    } catch (error) {\n      console.error('Role check error:', error);\n      return false;\n    }\n  };\n  const isAuthenticated = () => {\n    try {\n      return authService.isAuthenticated();\n    } catch (error) {\n      console.error('Authentication check error:', error);\n      return false;\n    }\n  };\n  const value = {\n    user,\n    loading,\n    error,\n    login,\n    logout,\n    register,\n    forgotPassword,\n    resetPassword,\n    verifyResetToken,\n    updateProfile,\n    verifyEmail,\n    changePassword,\n    hasPermission,\n    hasRole,\n    isAuthenticated\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"PA9FxEY9xSNRrsSqaLtbYei52Hs=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","authService","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","error","setError","initAuth","isAuthenticated","userData","getUser","console","message","login","email","password","logout","register","result","forgotPassword","resetPassword","token","newPassword","verifyResetToken","updateProfile","profileData","updatedUser","verifyEmail","changePassword","oldPassword","hasPermission","permission","hasRole","role","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/Users/kirannaik/Desktop/zed/Android-fullstack-ibcm/admin-panel/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\nimport authService from '../services/authService';\n\nconst AuthContext = createContext(null);\n\nexport const AuthProvider = ({ children }) => {\n    const [user, setUser] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const initAuth = () => {\n            try {\n                if (authService.isAuthenticated()) {\n                    const userData = authService.getUser();\n                    setUser(userData);\n                }\n            } catch (error) {\n                console.error('Auth initialization error:', error);\n                setError(error.message || 'Authentication error');\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        initAuth();\n    }, []);\n\n    const login = async (email, password) => {\n        try {\n            setLoading(true);\n            setError(null);\n            const userData = await authService.login(email, password);\n            if (userData) {\n                setUser(userData);\n            }\n            return userData;\n        } catch (error) {\n            console.error('Login error:', error);\n            setError(error.message || 'Login failed');\n            throw error;\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const logout = () => {\n        try {\n            authService.logout();\n            setUser(null);\n        } catch (error) {\n            console.error('Logout error:', error);\n            setError(error.message || 'Logout failed');\n        }\n    };\n\n    const register = async (userData) => {\n        try {\n            setLoading(true);\n            setError(null);\n            const result = await authService.register(userData);\n            return result;\n        } catch (error) {\n            console.error('Registration error:', error);\n            setError(error.message || 'Registration failed');\n            throw error;\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const forgotPassword = async (email) => {\n        try {\n            setLoading(true);\n            setError(null);\n            await authService.forgotPassword(email);\n        } catch (error) {\n            console.error('Forgot password error:', error);\n            setError(error.message || 'Password reset request failed');\n            throw error;\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const resetPassword = async (token, newPassword) => {\n        try {\n            setLoading(true);\n            setError(null);\n            await authService.resetPassword(token, newPassword);\n        } catch (error) {\n            console.error('Reset password error:', error);\n            setError(error.message || 'Password reset failed');\n            throw error;\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const verifyResetToken = async (token) => {\n        try {\n            setLoading(true);\n            setError(null);\n            const result = await authService.verifyResetToken(token);\n            return result;\n        } catch (error) {\n            console.error('Verify reset token error:', error);\n            setError(error.message || 'Token verification failed');\n            throw error;\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const updateProfile = async (profileData) => {\n        try {\n            setLoading(true);\n            setError(null);\n            const updatedUser = await authService.updateProfile(profileData);\n            if (updatedUser) {\n                setUser(updatedUser);\n            }\n            return updatedUser;\n        } catch (error) {\n            console.error('Update profile error:', error);\n            setError(error.message || 'Profile update failed');\n            throw error;\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const verifyEmail = async (token) => {\n        try {\n            setLoading(true);\n            setError(null);\n            const result = await authService.verifyEmail(token);\n            return result;\n        } catch (error) {\n            console.error('Verify email error:', error);\n            setError(error.message || 'Email verification failed');\n            throw error;\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const changePassword = async (oldPassword, newPassword) => {\n        try {\n            setLoading(true);\n            setError(null);\n            await authService.changePassword(oldPassword, newPassword);\n            return true;\n        } catch (error) {\n            console.error('Change password error:', error);\n            setError(error.message || 'Password change failed');\n            throw error;\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const hasPermission = (permission) => {\n        try {\n            return authService.hasPermission(permission);\n        } catch (error) {\n            console.error('Permission check error:', error);\n            return false;\n        }\n    };\n\n    const hasRole = (role) => {\n        try {\n            return authService.hasRole(role);\n        } catch (error) {\n            console.error('Role check error:', error);\n            return false;\n        }\n    };\n\n    const isAuthenticated = () => {\n        try {\n            return authService.isAuthenticated();\n        } catch (error) {\n            console.error('Authentication check error:', error);\n            return false;\n        }\n    };\n\n    const value = {\n        user,\n        loading,\n        error,\n        login,\n        logout,\n        register,\n        forgotPassword,\n        resetPassword,\n        verifyResetToken,\n        updateProfile,\n        verifyEmail,\n        changePassword,\n        hasPermission,\n        hasRole,\n        isAuthenticated\n    };\n\n    return (\n        <AuthContext.Provider value={value}>\n            {children}\n        </AuthContext.Provider>\n    );\n};\n\nexport const useAuth = () => {\n    const context = useContext(AuthContext);\n    if (!context) {\n        throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n};\n\nexport default AuthContext; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}