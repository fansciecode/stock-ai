{"ast":null,"code":"import api from\"./api\";const authService={login:async(email,password)=>{try{const response=await api.post(\"/auth/login\",{email,password});return{success:true,token:response.data.token,refreshToken:response.data.refreshToken,user:response.data.user};}catch(error){var _error$response,_error$response$data;console.error(\"Login error:\",error);return{success:false,message:((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||\"Login failed\"};}},signup:async userData=>{try{// Transform frontend data to match backend expectations\nconst registrationData={name:`${userData.firstName||''} ${userData.lastName||''}`.trim()||'User',email:userData.email,password:userData.password};// Validate required fields\nif(!registrationData.email||!registrationData.password){return{success:false,message:\"Email and password are required\"};}console.log('Sending registration data:',registrationData);const response=await api.post(\"/auth/register\",registrationData);return{success:true,message:\"Account created successfully\",user:response.data.user};}catch(error){var _error$response2,_error$response2$data;console.error(\"Signup error:\",error);return{success:false,message:((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||\"Signup failed\"};}},logout:async()=>{try{await api.post(\"/auth/logout\");localStorage.removeItem(\"token\");localStorage.removeItem(\"refreshToken\");return{success:true};}catch(error){console.error(\"Logout error:\",error);// Clear tokens even if logout fails\nlocalStorage.removeItem(\"token\");localStorage.removeItem(\"refreshToken\");return{success:true};}},verifyToken:async()=>{try{const token=localStorage.getItem(\"token\");if(!token){return{success:false,message:\"No token found\"};}const response=await api.get(\"/auth/verify\",{headers:{Authorization:`Bearer ${token}`}});return{success:true,user:response.data.user};}catch(error){var _error$response3,_error$response3$data;console.error(\"Token verification error:\",error);return{success:false,message:((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.message)||\"Token verification failed\"};}},refreshToken:async refreshToken=>{try{const response=await api.post(\"/auth/refresh-token\",{refreshToken});return{success:true,token:response.data.token,refreshToken:response.data.refreshToken};}catch(error){var _error$response4,_error$response4$data;console.error(\"Token refresh error:\",error);return{success:false,message:((_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:_error$response4$data.message)||\"Token refresh failed\"};}},forgotPassword:async email=>{try{const response=await api.post(\"/auth/forgot-password\",{email});return{success:true,message:\"Password reset email sent\"};}catch(error){var _error$response5,_error$response5$data;console.error(\"Forgot password error:\",error);return{success:false,message:((_error$response5=error.response)===null||_error$response5===void 0?void 0:(_error$response5$data=_error$response5.data)===null||_error$response5$data===void 0?void 0:_error$response5$data.message)||\"Failed to send reset email\"};}},resetPassword:async(token,newPassword)=>{try{const response=await api.post(\"/auth/reset-password\",{token,newPassword});return{success:true,message:\"Password reset successfully\"};}catch(error){var _error$response6,_error$response6$data;console.error(\"Reset password error:\",error);return{success:false,message:((_error$response6=error.response)===null||_error$response6===void 0?void 0:(_error$response6$data=_error$response6.data)===null||_error$response6$data===void 0?void 0:_error$response6$data.message)||\"Failed to reset password\"};}},updateProfile:async userData=>{try{const response=await api.put(\"/auth/profile\",userData);return{success:true,user:response.data.user,message:\"Profile updated successfully\"};}catch(error){var _error$response7,_error$response7$data;console.error(\"Update profile error:\",error);return{success:false,message:((_error$response7=error.response)===null||_error$response7===void 0?void 0:(_error$response7$data=_error$response7.data)===null||_error$response7$data===void 0?void 0:_error$response7$data.message)||\"Failed to update profile\"};}}};export{authService};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}