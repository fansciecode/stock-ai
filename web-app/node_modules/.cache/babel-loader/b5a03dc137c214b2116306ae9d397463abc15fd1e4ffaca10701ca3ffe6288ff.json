{"ast":null,"code":"import api from'./api';class SearchService{// General Search\nasync search(query){let filters=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};try{const response=await api.get('/search',{params:{q:query,...filters}});return{success:true,data:response.data};}catch(error){var _error$response,_error$response$data;return{success:false,message:((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||'Search failed'};}}// Event Search\nasync searchEvents(query){let filters=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};try{const response=await api.get('/search/events',{params:{q:query,...filters}});return{success:true,data:response.data};}catch(error){var _error$response2,_error$response2$data;return{success:false,message:((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||'Event search failed'};}}// User Search\nasync searchUsers(query){let filters=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};try{const response=await api.get('/search/users',{params:{q:query,...filters}});return{success:true,data:response.data};}catch(error){var _error$response3,_error$response3$data;return{success:false,message:((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.message)||'User search failed'};}}// Category Search\nasync searchCategories(query){try{const response=await api.get('/search/categories',{params:{q:query}});return{success:true,data:response.data};}catch(error){var _error$response4,_error$response4$data;return{success:false,message:((_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:_error$response4$data.message)||'Category search failed'};}}// Product Search\nasync searchProducts(query){let filters=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};try{const response=await api.get('/search/products',{params:{q:query,...filters}});return{success:true,data:response.data};}catch(error){var _error$response5,_error$response5$data;return{success:false,message:((_error$response5=error.response)===null||_error$response5===void 0?void 0:(_error$response5$data=_error$response5.data)===null||_error$response5$data===void 0?void 0:_error$response5$data.message)||'Product search failed'};}}// Location-based Search\nasync searchNearby(latitude,longitude){let radius=arguments.length>2&&arguments[2]!==undefined?arguments[2]:10;let type=arguments.length>3&&arguments[3]!==undefined?arguments[3]:'events';try{const response=await api.get('/search/nearby',{params:{lat:latitude,lng:longitude,radius,type}});return{success:true,data:response.data};}catch(error){var _error$response6,_error$response6$data;return{success:false,message:((_error$response6=error.response)===null||_error$response6===void 0?void 0:(_error$response6$data=_error$response6.data)===null||_error$response6$data===void 0?void 0:_error$response6$data.message)||'Nearby search failed'};}}// Advanced Search\nasync advancedSearch(criteria){try{const response=await api.post('/search/advanced',criteria);return{success:true,data:response.data};}catch(error){var _error$response7,_error$response7$data;return{success:false,message:((_error$response7=error.response)===null||_error$response7===void 0?void 0:(_error$response7$data=_error$response7.data)===null||_error$response7$data===void 0?void 0:_error$response7$data.message)||'Advanced search failed'};}}// Search Suggestions\nasync getSearchSuggestions(query){let type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'all';try{const response=await api.get('/search/suggestions',{params:{q:query,type}});return{success:true,data:response.data};}catch(error){var _error$response8,_error$response8$data;return{success:false,message:((_error$response8=error.response)===null||_error$response8===void 0?void 0:(_error$response8$data=_error$response8.data)===null||_error$response8$data===void 0?void 0:_error$response8$data.message)||'Failed to get suggestions'};}}// Popular Searches\nasync getPopularSearches(){let type=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'all';let limit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:10;try{const response=await api.get('/search/popular',{params:{type,limit}});return{success:true,data:response.data};}catch(error){var _error$response9,_error$response9$data;return{success:false,message:((_error$response9=error.response)===null||_error$response9===void 0?void 0:(_error$response9$data=_error$response9.data)===null||_error$response9$data===void 0?void 0:_error$response9$data.message)||'Failed to get popular searches'};}}// Search History\nasync getSearchHistory(){let limit=arguments.length>0&&arguments[0]!==undefined?arguments[0]:20;try{const response=await api.get('/search/history',{params:{limit}});return{success:true,data:response.data};}catch(error){var _error$response0,_error$response0$data;return{success:false,message:((_error$response0=error.response)===null||_error$response0===void 0?void 0:(_error$response0$data=_error$response0.data)===null||_error$response0$data===void 0?void 0:_error$response0$data.message)||'Failed to get search history'};}}async saveSearchHistory(query){let type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'general';let filters=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};try{const response=await api.post('/search/history',{query,type,filters,timestamp:new Date().toISOString()});return{success:true,data:response.data};}catch(error){var _error$response1,_error$response1$data;return{success:false,message:((_error$response1=error.response)===null||_error$response1===void 0?void 0:(_error$response1$data=_error$response1.data)===null||_error$response1$data===void 0?void 0:_error$response1$data.message)||'Failed to save search history'};}}async clearSearchHistory(){try{const response=await api.delete('/search/history');return{success:true,data:response.data};}catch(error){var _error$response10,_error$response10$dat;return{success:false,message:((_error$response10=error.response)===null||_error$response10===void 0?void 0:(_error$response10$dat=_error$response10.data)===null||_error$response10$dat===void 0?void 0:_error$response10$dat.message)||'Failed to clear search history'};}}// Search Filters\nasync getSearchFilters(){let type=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'events';try{const response=await api.get(`/search/filters/${type}`);return{success:true,data:response.data};}catch(error){// Return default filters if API fails\nreturn{success:true,data:this.getDefaultFilters(type)};}}getDefaultFilters(type){const commonFilters={dateRange:{type:'date',label:'Date Range',options:['today','tomorrow','this_week','this_month','custom']},sortBy:{type:'select',label:'Sort By',options:['relevance','date','popularity','rating','price']}};switch(type){case'events':return{...commonFilters,category:{type:'multiselect',label:'Categories',options:[]},location:{type:'location',label:'Location',radius:true},price:{type:'range',label:'Price Range',min:0,max:1000},eventType:{type:'select',label:'Event Type',options:['online','offline','hybrid']}};case'users':return{...commonFilters,userType:{type:'select',label:'User Type',options:['organizer','attendee','vendor']},verified:{type:'boolean',label:'Verified Users Only'}};case'products':return{...commonFilters,category:{type:'multiselect',label:'Categories',options:[]},price:{type:'range',label:'Price Range',min:0,max:1000},rating:{type:'range',label:'Rating',min:0,max:5},availability:{type:'select',label:'Availability',options:['in_stock','out_of_stock','pre_order']}};default:return commonFilters;}}// Search Analytics\nasync logSearchAnalytics(query,type,resultsCount){let clickedResult=arguments.length>3&&arguments[3]!==undefined?arguments[3]:null;try{const response=await api.post('/search/analytics',{query,type,resultsCount,clickedResult,timestamp:new Date().toISOString(),userAgent:navigator.userAgent});return{success:true,data:response.data};}catch(error){// Silently fail analytics logging\nreturn{success:false};}}// Saved Searches\nasync getSavedSearches(){try{const response=await api.get('/search/saved');return{success:true,data:response.data};}catch(error){var _error$response11,_error$response11$dat;return{success:false,message:((_error$response11=error.response)===null||_error$response11===void 0?void 0:(_error$response11$dat=_error$response11.data)===null||_error$response11$dat===void 0?void 0:_error$response11$dat.message)||'Failed to get saved searches'};}}async saveSearch(searchData){try{const response=await api.post('/search/saved',{...searchData,timestamp:new Date().toISOString()});return{success:true,data:response.data};}catch(error){var _error$response12,_error$response12$dat;return{success:false,message:((_error$response12=error.response)===null||_error$response12===void 0?void 0:(_error$response12$dat=_error$response12.data)===null||_error$response12$dat===void 0?void 0:_error$response12$dat.message)||'Failed to save search'};}}async deleteSavedSearch(searchId){try{const response=await api.delete(`/search/saved/${searchId}`);return{success:true,data:response.data};}catch(error){var _error$response13,_error$response13$dat;return{success:false,message:((_error$response13=error.response)===null||_error$response13===void 0?void 0:(_error$response13$dat=_error$response13.data)===null||_error$response13$dat===void 0?void 0:_error$response13$dat.message)||'Failed to delete saved search'};}}// Search Validation\nvalidateSearchQuery(query){const errors=[];if(!query||query.trim().length===0){errors.push('Search query cannot be empty');}if(query&&query.length<2){errors.push('Search query must be at least 2 characters long');}if(query&&query.length>100){errors.push('Search query must be less than 100 characters');}// Check for potentially harmful characters\nconst dangerousChars=/[<>\\\"'&]/g;if(query&&dangerousChars.test(query)){errors.push('Search query contains invalid characters');}return{isValid:errors.length===0,errors};}// Format Search Results\nformatSearchResults(results,type){if(!results||!Array.isArray(results)){return[];}return results.map(result=>{const baseResult={id:result.id,title:result.title||result.name,description:result.description,type:type,url:result.url,timestamp:result.timestamp||result.createdAt};// Add type-specific formatting\nswitch(type){case'events':return{...baseResult,date:result.date,location:result.location,price:result.price,category:result.category,imageUrl:result.imageUrl,attendeeCount:result.attendeeCount};case'users':return{...baseResult,username:result.username,profileImage:result.profileImage,verified:result.verified,userType:result.userType};case'products':return{...baseResult,price:result.price,rating:result.rating,reviewCount:result.reviewCount,category:result.category,imageUrl:result.imageUrl,inStock:result.inStock};default:return baseResult;}});}// Debounce Search\ndebounceSearch(func){var _this=this;let delay=arguments.length>1&&arguments[1]!==undefined?arguments[1]:300;let timeoutId;return function(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}clearTimeout(timeoutId);timeoutId=setTimeout(()=>func.apply(_this,args),delay);};}// Get Recent Searches from Local Storage\ngetRecentSearches(){try{const recent=localStorage.getItem('recentSearches');return recent?JSON.parse(recent):[];}catch(error){return[];}}// Save Recent Search to Local Storage\nsaveRecentSearch(query){let type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'general';try{const recent=this.getRecentSearches();const newSearch={query,type,timestamp:new Date().toISOString()};// Remove duplicate\nconst filtered=recent.filter(search=>search.query!==query);// Add to beginning and limit to 10\nconst updated=[newSearch,...filtered].slice(0,10);localStorage.setItem('recentSearches',JSON.stringify(updated));}catch(error){console.error('Failed to save recent search:',error);}}// Clear Recent Searches from Local Storage\nclearRecentSearches(){try{localStorage.removeItem('recentSearches');}catch(error){console.error('Failed to clear recent searches:',error);}}}export default new SearchService();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}